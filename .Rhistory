library(cowplot)
library(weights)
data <- adata::red_data()
data
px_total <- data %>% nrow()
data %>% str()
data %>% summary()
data %>% pull(ID) %>% table()
data %>% pull(AGE_YEARS) %>% table()
data <- data %>%
filter(AGE_YEARS != "1y") %>%
mutate(AGE_YEARS = as.numeric(AGE_YEARS))
too_young_p <- data %>%
filter(AGE_YEARS < 18) %>% nrow()
data <- data %>% filter(AGE_YEARS > 17)
data %>%
pull(GROUP) %>%
table()
data <- data %>%
mutate(GROUP = recode(GROUP, "cotrol" = "control"))
data <- data %>% mutate(GROUP = factor(GROUP, labels = c("White", "Red")))
is.na(data) %>% as_tibble()
rowSums(is.na(data))
data %>% filter_all(any_vars(is.na(.)))
p_missing_na <- data %>% filter(rowSums(is.na(data)) > 0) %>% nrow()
data <- data %>% filter(rowSums(is.na(data)) < 1)
age_years_data <- data %>%
summarise(mean = mean(AGE_YEARS, na.rm = T),
sd = sd(AGE_YEARS),
min = min(AGE_YEARS),
max = max(AGE_YEARS)) %>% modify(round, 2)
age_years_group <- data %>% mutate(GROUP = fct_explicit_na(GROUP)) %>% group_by(GROUP) %>%
summarise(n = n(),
perc = n()/nrow(data) * 100,
mean_age = mean(AGE_YEARS),
sd_age = sd(AGE_YEARS))
age_group_table <- age_years_group %>%
kable(col.names = c("*Group*", "*N*", "*%*", "*Mean Age*", "*SD Age*"),
caption = "Table 1 *Participants descriptive by condition*",
digits = 2) %>% kable_styling()
attractiveness <- data %>% group_by(ID) %>% mutate(attractiveness = mean(c(ITEM_1 + ITEM_2 + ITEM_3), na.rm = T)) %>% select(ID, ITEM_1, ITEM_2, ITEM_3, attractiveness)
data <- data %>%
group_by(ID) %>%
mutate(attractiveness = mean(c(ITEM_1, ITEM_2, ITEM_3), na.rm = T)) %>%
ungroup()
data %>% summary()
data %>% str()
attract_bygroup <- data %>% group_by(GROUP) %>%
summarise(n = n(),
mean_attract = mean(attractiveness),
sd_attract = sd(attractiveness))
people_all_responses <- data %>% select(ITEM_1, ITEM_2, ITEM_3, attractiveness) %>%
pivot_longer(everything(), names_to = "variable", values_to = "value") %>% ggplot(aes(value)) +
geom_histogram() +
facet_wrap(~variable) +
theme_cowplot()
attract_means_plot <- data %>% ggplot(aes(x = GROUP, y = attractiveness, fill = GROUP)) + labs(x = "Condition", y = "Mean Attractiveness Rating") + stat_summary(fun.data="mean_cl_boot", geom="errorbar", width = .25) + geom_point(stat = "summary", fun.y = "mean", size = 6, shape = 21) + scale_fill_manual(values = c("grey", "red"), guide = FALSE) + ylim(0, 7) + theme_cowplot()
attract_means_plot
all_mean_item_desc <- data %>% group_by(GROUP) %>% summarise(
mean_item1 = mean(ITEM_1, na.rm = T), sd_item1 = sd(ITEM_1, na.rm = T), mean_item2 = mean(ITEM_2, na.rm = T), sd_item2 = sd(ITEM_2, na.rm = T), mean_item3 = mean(ITEM_3, na.rm = T), sd_item3 = sd(ITEM_3, na.rm = T))
all_mean_item_desc
all_mean_item_table <- all_mean_item_desc %>%
kable(caption = "*Table 2* Summary of mean ratings by condition",
col.names = c("Condition", "*M* 1", "*SD* 1", "*M* 2", "*SD* 2","*M* 3", "*SD* 3"),
digits = 2) %>% kable_styling()
all_mean_item_table
data %>% select(ITEM_1, ITEM_2, ITEM_3) %>% as.matrix() %>% rcorr()
data %>% select(ITEM_1, ITEM_2, ITEM_3) %>% as.matrix() %>% rcorr()
attract.test <- data %>%
t.test(attractiveness ~ GROUP, ., alternative = "two.sided", var.equal = T)
attract.test
p <- 2.2e-16
ifelse(p >= .001, rd(p, 3), " < .001")
ifelse(p >= .001, paste0("= ",rd(p, 3)), "< .001")
report.p <- function(x){
ifelse(x >= .001, paste0("= ",rd(x, 3)), "< .001")}
report.p
px_total
age_years_data %>% pull(mean)
age_years_data %>% pull(sd)
too_young_p
age_years_data %>% pull(min)
candidate_number <- 201192
library(tidyverse)
library(kableExtra)
library(Hmisc)
library(here)
library(cowplot)
library(weights)
data <- adata::red_data()
data
px_total <- data %>% nrow()
data %>% str()
data %>% summary()
data %>% pull(ID) %>% table()
data %>% pull(AGE_YEARS) %>% table()
data <- data %>%
filter(AGE_YEARS != "1y") %>%
mutate(AGE_YEARS = as.numeric(AGE_YEARS))
too_young_p <- data %>%
filter(AGE_YEARS < 18) %>% nrow()
data <- data %>% filter(AGE_YEARS > 17)
data %>%
pull(GROUP) %>%
table()
data <- data %>%
mutate(GROUP = recode(GROUP, "cotrol" = "control"))
data <- data %>% mutate(GROUP = factor(GROUP, labels = c("White", "Red")))
is.na(data) %>% as_tibble()
rowSums(is.na(data))
data %>% filter_all(any_vars(is.na(.)))
p_missing_na <- data %>% filter(rowSums(is.na(data)) > 0) %>% nrow()
data <- data %>% filter(rowSums(is.na(data)) < 1)
age_years_data <- data %>%
summarise(mean = mean(AGE_YEARS, na.rm = T),
sd = sd(AGE_YEARS),
min = min(AGE_YEARS),
max = max(AGE_YEARS)) %>% modify(round, 2)
age_years_group <- data %>% mutate(GROUP = fct_explicit_na(GROUP)) %>% group_by(GROUP) %>%
summarise(n = n(),
perc = n()/nrow(data) * 100,
mean_age = mean(AGE_YEARS),
sd_age = sd(AGE_YEARS))
age_group_table <- age_years_group %>%
kable(col.names = c("*Group*", "*N*", "*%*", "*Mean Age*", "*SD Age*"),
caption = "Table 1 *Participants descriptive by condition*",
digits = 2) %>% kable_styling()
attractiveness <- data %>% group_by(ID) %>% mutate(attractiveness = mean(c(ITEM_1 + ITEM_2 + ITEM_3), na.rm = T)) %>% select(ID, ITEM_1, ITEM_2, ITEM_3, attractiveness)
data <- data %>%
group_by(ID) %>%
mutate(attractiveness = mean(c(ITEM_1, ITEM_2, ITEM_3), na.rm = T)) %>%
ungroup()
data %>% summary()
data %>% str()
attract_bygroup <- data %>% group_by(GROUP) %>%
summarise(n = n(),
mean_attract = mean(attractiveness),
sd_attract = sd(attractiveness))
people_all_responses <- data %>% select(ITEM_1, ITEM_2, ITEM_3, attractiveness) %>%
pivot_longer(everything(), names_to = "variable", values_to = "value") %>% ggplot(aes(value)) +
geom_histogram() +
facet_wrap(~variable) +
theme_cowplot()
attract_means_plot <- data %>% ggplot(aes(x = GROUP, y = attractiveness, fill = GROUP)) + labs(x = "Condition", y = "Mean Attractiveness Rating") + stat_summary(fun.data="mean_cl_boot", geom="errorbar", width = .25) + geom_point(stat = "summary", fun.y = "mean", size = 6, shape = 21) + scale_fill_manual(values = c("grey", "red"), guide = FALSE) + ylim(0, 7) + theme_cowplot()
attract_means_plot
all_mean_item_desc <- data %>% group_by(GROUP) %>% summarise(
mean_item1 = mean(ITEM_1, na.rm = T), sd_item1 = sd(ITEM_1, na.rm = T), mean_item2 = mean(ITEM_2, na.rm = T), sd_item2 = sd(ITEM_2, na.rm = T), mean_item3 = mean(ITEM_3, na.rm = T), sd_item3 = sd(ITEM_3, na.rm = T))
all_mean_item_desc
all_mean_item_table <- all_mean_item_desc %>%
kable(caption = "*Table 2* Summary of mean ratings by condition",
col.names = c("Condition", "*M* 1", "*SD* 1", "*M* 2", "*SD* 2","*M* 3", "*SD* 3"),
digits = 2) %>% kable_styling()
all_mean_item_table
data %>% select(ITEM_1, ITEM_2, ITEM_3) %>% as.matrix() %>% rcorr()
attract.test <- data %>%
t.test(attractiveness ~ GROUP, ., alternative = "two.sided", var.equal = T)
attract.test
p <- 2.2e-16
ifelse(p >= .001, rd(p, 3), " < .001")
ifelse(p >= .001, paste0("= ",rd(p, 3)), "< .001")
report.p <- function(x){
ifelse(x >= .001, paste0("= ",rd(x, 3)), "< .001")}
report.p
attract_means_plot
data %>% select(ITEM_1, ITEM_2, ITEM_3) %>% as.matrix() %>% rcorr()
rcorr()
data %>% select(ITEM_1, ITEM_2, ITEM_3) %>% as.matrix()
data %>% select(ITEM_1, ITEM_2, ITEM_3) %>% as.matrix() %>% rcorr()
default_pkgs <-  c("base", "teachR", getOption("defaultPackages"))
installed_pkgs <- installed.packages()[ , 1]
knitr::opts_chunk$set(error = T)
default_chunk_opts <- knitr::opts_chunk$get()[c("echo", "eval", "include", "results", "error")]
keep_obj <- c("candidate_number", "check","default_chunk_opts", "default_pkgs",
"i", "installed_pkgs", "keep_obj", "marking_path", "results",
"results_check", "rmd", "rubric", "ss", "submitted", "vsub")
# keep_obj <- c(keep_obj, "mark")
# source("marking/AnD/result_fun.R")
# source("marking/AnD/aux_funs.R")
# library(rcanvas)
library(tidyverse)
library(teachR)
google_sheet_id <- "19CXCZk28CQzX4MzQ86a5U-ijYQvP47x0mfX7pQk6KKo"
marking_path <- "marking/AnD/2019-20"
canvas_token <- "12049~qYWXCdYCGvsTFY7K5M8UP7Vb23CwEH1wk2GKcJqbXF3Nja3QUg7G2Ksr6dBscIN9"
and_id <- 9242
report_id <- 25272
ss <- googlesheets4::gs4_get(google_sheet_id)
getwd()
devtools::document()
res <- function(study = NA, cand_no = candidate_number) {
`%>%` <- magrittr::`%>%`
if (study == "red") {
data <- adata::red_data(cand_no, mark = T)
groups <- c("control", "experimental")
typo_cond <- grep(paste(groups, collapse = "|"), unique(data$condition),
invert = T, value = T)
out <- list(
rem_age_na = sum(is.na(data$age)),
rem_age_typo = 1,
rem_age_young = sum(as.numeric(data$age) < 18, na.rm = T)
)
data$condition[data$condition == typo_cond] <- groups[which.min(adist(typo_cond, groups))]
data <- data %>%
dplyr::mutate(condition = droplevels(condition),
age = as.numeric(age),
rating = (item_1 + item_2 + item_3)/3) %>%
dplyr::filter(!is.na(age) & age > 17)
out$n_clean = nrow(data)
out$cond_desc <- data %>%
dplyr::group_by(condition) %>%
dplyr::summarise(n = dplyr::n(),
age_m = mean(age),
sd_age = sd(age),
min_age = min(age),
max_age = max(age),
rating_m = mean(rating),
rating_sd = sd(rating)) %>%
dplyr::mutate_if(is.numeric, round, 2)
out$cond_desc_tab <- out$cond_desc[ , c(1:3, 7)] %>%
dplyr::mutate(condition = dplyr::recode(
condition, "control" = "Control", "experimental" = "Experim")) %>%
knitr::kable(col.names = c("Group", "<em>N</em>",
"<em>M</em><sub>age</sub>", "<em>M</em><sub>rating</sub>"),
escape = F) %>%
kableExtra::kable_styling(full_width = F, position = "left")
out$result <- t.test(rating ~ condition, data, var.equal = T)
} else if (study == "green") {
data <- adata::green_data(cand_no, mark = T)
groups <- c("control", "experimental")
typo_cond <- grep(paste(groups, collapse = "|"), unique(data$condition),
invert = T, value = T)
typo_age <- grep("[A-z]", data$age, value = T)
correct_age <- na.omit(
unique(as.numeric(
data$age[data$id == data$id[which(data$age == typo_age)]]
))
)
out <- list(
rem_age_na = sum(is.na(data$age)/3)
)
data$condition[data$condition == typo_cond] <- groups[which.min(adist(typo_cond, groups))]
data$age[which(data$age == typo_age)] <- correct_age
out$rem_age_young = sum(as.numeric(data$age < 18), na.rm = T)/3
data <- data %>%
dplyr::mutate(condition = droplevels(condition),
age = as.numeric(age)) %>%
dplyr::filter(!is.na(age) & age > 17)
out$n_clean = nrow(data)/3
out$gen_desc <- data %>%
dplyr::group_by(gender) %>%
dplyr::summarise(n = dplyr::n()/3,
age_m = mean(age),
sd_age = sd(age),
min_age = min(age),
max_age = max(age),
perc_green = round(prop.table(table(selection))["green"] * 100, 2)) %>%
dplyr::mutate_if(is.numeric, round, 2)
out$cond_desc <- data %>%
dplyr::group_by(condition) %>%
dplyr::summarise(n = dplyr::n()/3,
age_m = mean(age),
sd_age = sd(age),
min_age = min(age),
max_age = max(age),
perc_green = round(prop.table(table(selection))["green"] * 100, 2)) %>%
dplyr::mutate_if(is.numeric, round, 2)
out$gen_desc_tab <- out$gen_desc[ , c(1:3, 7)] %>%
dplyr::mutate(gender = stringr::str_to_sentence(gender)) %>%
knitr::kable(col.names = c("Gender", "<em>N</em>",
"<em>M</em><sub>age</sub>", "% green"),
escape = F) %>%
kableExtra::kable_styling(full_width = F, position = "left")
out$cond_desc_tab <- out$cond_desc[ , c(1:3, 7)] %>%
dplyr::mutate(condition = dplyr::recode(
condition, "control" = "Control", "experimental" = "Experim")) %>%
knitr::kable(col.names = c("Group", "<em>N</em>",
"<em>M</em><sub>age</sub>", "% green"),
escape = F) %>%
kableExtra::kable_styling(full_width = F, position = "left")
for (i in levels(data$product)) {
temp <- data[data$product == i, ]
out[[i]] <- chisq.test(table(temp$selection, temp$condition))
}
}
return(out)
}
devtools::document()
devtools::document()
devtools::document()
devtools::document()
debud(devtools::document)
debug(devtools::document)
devtools::document()
devtools::document()
devtools::document()
getExportedValue(pkg, name)
devtools::document()
.Internal(Sys.getenv(as.character(x), as.character(unset)))
getwd()
devtools::document()
undebug(devtools::document)
debug(roxygen2::merge.rd_section_minidesc)
debug(roxygen2:::merge.rd_section_minidesc)
devtools::document()
x
y
x$value$type
y$value$type
x$value$type
class(x)
class(y)
c(x$value$label,
y$value$label)
c(x$value$desc, y$value$desc)
x$value$type
rd_section_minidesc(x$value$type, label = c(x$value$label,
y$value$label), desc = c(x$value$desc, y$value$desc))
stopifnot(identical(x$value$type, y$value$type))
x
y
x$value$type
y$value$type)
y$value$type
undebug(roxygen2:::merge.rd_section_minidesc)
devtools::document()
debug(roxygen2:::merge.rd_section_minidesc)
devtools::document()
devtools::document()
x
y
devtools::document()
devtools::document()
debug(roxygen2:::rd_section_minidesc)
devtools::document()
rd_section("minidesc", list(type = type, desc = desc, label = label))
undebug(roxygen2:::rd_section_minidesc)
undebug(roxygen2:::merge.rd_section_minidesc)
debug(roxygen2:::format.rd_section_minidesc)
devtools::document()
undebug(roxygen2:::format.rd_section_minidesc)
version
devtools::document()
devtools::document()
debug(roxygen2:::roxy_tag_parse.roxy_tag_describeIn)
devtools::document()
x
x
x
x
first
second
pieces
x
devtools::document()
x
devtools::document()
devtools::document()
x
x
devtools::document()
devtools::document()
x
x$raw
str_trim(x$raw)
undebug(roxygen2:::roxy_tag_parse.roxy_tag_describeIn)
devtools::document()
id = "C:/work/OneDrive - University of Sussex/marking/AnD/2019-20/Alaa/10714.Rmd"
rmd <- ifelse(grepl("\\.rmd$", id, ignore.case = T), id, paste0(id, ".Rmd"))
rmd
gsub
html <- gsub("rmd$", "html", rev(unlist(strsplit(rmd, "[\\/]")))[1], ignore.case = T)
html
rmd
gsub("^(.*)/.*$", "\\1", rmd)
file.exists()
gsub("^(.*)/.*$", "\\1", 1234)
path <- sub("^(.*)/.*$", "\\1", id)
path
path != id
id <- sub(path, "", id)
id
id = "C:/work/OneDrive - University of Sussex/marking/AnD/2019-20/Alaa/10714.Rmd"
sub("^.*/", "", id)
id <- sub("^.*/", "", id)
rmd <- ifelse(grepl("\\.rmd$", id, ignore.case = T), id, paste0(id, ".Rmd"))
rmd
html <- gsub("rmd$", "html", rev(unlist(strsplit(rmd, "[\\/]")))[1], ignore.case = T)
html
local_html <- file.path(tempdir(), html)
local_html
!file.exists(rmd)
offline_html_path
offline_html_path = "../knitted"
file.path(offline_html_path, html), local_html
file.path(offline_html_path, html)
show.me <- function(id, module = "and", height = "maximize", online = F, url = "https://mivalek.github.io/.../marking/knitted/", offline_html_path = "../knitted") {
module <- ifelse(module == "and", "adata", module)
if (online) {
url <- sub("...", module, url, fixed = T)
} else {
offline_html_path <- ifelse(is.null(offline_html_path), "", offline_html_path)
}
on.exit(setwd(getwd()))
path <- sub("^(.*)/.*$", "\\1", id)
if (path != id) {
setwd(path)
id <- sub("^.*/", "", id)
}
rmd <- ifelse(grepl("\\.rmd$", id, ignore.case = T), id, paste0(id, ".Rmd"))
html <- gsub("rmd$", "html", rev(unlist(strsplit(rmd, "[\\/]")))[1], ignore.case = T)
local_html <- file.path(tempdir(), html)
if (!file.exists(rmd)) stop(paste0("Can't find ", rmd, ". Did you set working directory?"))
if (online) {
download.file(paste0(url, html),
local_html)
} else {
file.copy(file.path(offline_html_path, html), local_html)
}
rstudioapi::navigateToFile(rmd)
rstudioapi::viewer(local_html, height = height)
}
getwd()
show.me <- function(id, module = "and", height = "maximize", online = F, url = "https://mivalek.github.io/.../marking/knitted/", offline_html_path = "../knitted") {
module <- ifelse(module == "and", "adata", module)
if (online) {
url <- sub("...", module, url, fixed = T)
} else {
offline_html_path <- ifelse(is.null(offline_html_path), "", offline_html_path)
}
on.exit(setwd(getwd()))
path <- sub("^(.*)/.*$", "\\1", id)
if (path != id) {
setwd(path)
id <- sub("^.*/", "", id)
}
rmd <- ifelse(grepl("\\.rmd$", id, ignore.case = T), id, paste0(id, ".Rmd"))
html <- gsub("rmd$", "html", rev(unlist(strsplit(rmd, "[\\/]")))[1], ignore.case = T)
local_html <- file.path(tempdir(), html)
if (!file.exists(rmd)) stop(paste0("Can't find ", rmd, ". Did you set working directory?"))
if (online) {
download.file(paste0(url, html),
local_html)
} else {
file.copy(file.path(offline_html_path, html), local_html)
}
rstudioapi::navigateToFile(rmd)
rstudioapi::viewer(local_html, height = height)
}
show.me(id = "C:/work/OneDrive - University of Sussex/marking/AnD/2019-20/Alaa/10714.Rmd")
show.me(id = "C:/work/OneDrive - University of Sussex/marking/AnD/2019-20/Alaa/10714.Rmd")
getwd()
show.me <- function(id, module = "and", height = "maximize", online = F, url = "https://mivalek.github.io/.../marking/knitted/", offline_html_path = "../knitted") {
show.me <- function(id, module = "and", height = "maximize", online = F, url = "https://mivalek.github.io/.../marking/knitted/", offline_html_path = "../knitted") {
module <- ifelse(module == "and", "adata", module)
if (online) {
url <- sub("...", module, url, fixed = T)
} else {
offline_html_path <- ifelse(is.null(offline_html_path), "", offline_html_path)
}
wd_restore <- getwd()
on.exit(setwd(wd_restore))
path <- sub("^(.*)/.*$", "\\1", id)
if (path != id) {
setwd(path)
id <- sub("^.*/", "", id)
}
rmd <- ifelse(grepl("\\.rmd$", id, ignore.case = T), id, paste0(id, ".Rmd"))
html <- gsub("rmd$", "html", rev(unlist(strsplit(rmd, "[\\/]")))[1], ignore.case = T)
local_html <- file.path(tempdir(), html)
if (!file.exists(rmd)) stop(paste0("Can't find ", rmd, ". Did you set working directory?"))
if (online) {
download.file(paste0(url, html),
local_html)
} else {
file.copy(file.path(offline_html_path, html), local_html)
}
rstudioapi::navigateToFile(rmd)
rstudioapi::viewer(local_html, height = height)
}
setwd("C:/work/teachR")
show.me <- function(id, module = "and", height = "maximize", online = F, url = "https://mivalek.github.io/.../marking/knitted/", offline_html_path = "../knitted") {
module <- ifelse(module == "and", "adata", module)
if (online) {
url <- sub("...", module, url, fixed = T)
} else {
offline_html_path <- ifelse(is.null(offline_html_path), "", offline_html_path)
}
wd_restore <- getwd()
on.exit(setwd(wd_restore))
path <- sub("^(.*)/.*$", "\\1", id)
if (path != id) {
setwd(path)
id <- sub("^.*/", "", id)
}
rmd <- ifelse(grepl("\\.rmd$", id, ignore.case = T), id, paste0(id, ".Rmd"))
html <- gsub("rmd$", "html", rev(unlist(strsplit(rmd, "[\\/]")))[1], ignore.case = T)
local_html <- file.path(tempdir(), html)
if (!file.exists(rmd)) stop(paste0("Can't find ", rmd, ". Did you set working directory?"))
if (online) {
download.file(paste0(url, html),
local_html)
} else {
file.copy(file.path(offline_html_path, html), local_html)
}
rstudioapi::navigateToFile(rmd)
rstudioapi::viewer(local_html, height = height)
}
show.me(id = "C:/work/OneDrive - University of Sussex/marking/AnD/2019-20/Alaa/10714.Rmd")
getwd()
devtools::document()
remotes::install_github("mivalek/teachR")
devtools::document()
