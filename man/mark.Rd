% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mark.R
\name{mark}
\alias{mark}
\title{Mark coursework assignment Rmd}
\usage{
mark(
  file = NULL,
  file_name = file,
  study = NULL,
  mark = NULL,
  rubric_grades = NULL,
  rubric = NULL,
  include_rubric_desc = F,
  feedback = F,
  rubric_url = NULL,
  flowchart_url = NULL,
  quick_comment_url = NULL,
  count_words = !feedback,
  limit = 2000,
  include_results = F,
  results_obj = NULL,
  format_comments = T,
  collapse_chunks = F,
  color = "#b38ed2",
  text = NULL,
  install_missing_pkgs = F,
  installed_pkgs = NULL
)
}
\arguments{
\item{file}{\code{character}. Either path to .Rmd file to mark or URL from which to read the file.}

\item{file_name}{\code{character}. If \code{file=} is a URL, name of file to write to.}

\item{study}{\code{character}. Which study to get correct results for? Currently either \code{"red"} or \code{"green"}.}

\item{mark}{\code{numeric}. Total mark/grade for given assignment.}

\item{rubric}{A named list containing the rubric criteria (c1, c2, etc). Each criterion should be a list with \code{name}, \code{col}, and \code{text} elements containing the name, colour, and description of the criterion, respectively.}

\item{include_rubric_desc}{\code{logical}. If \code{TRUE} and if \code{rubric_grades} is a factor, grade descriptors for each marking criterion will be included in sidebar boxes.}

\item{feedback}{\code{logical}. Should feedback box with marker's comments appear at the bottom of document? \code{FALSE} by default.}

\item{rubric_url}{\code{cahracter}. URL to a webpage containing markng rubric/criteria/guidelines for markers' quick reference.}

\item{flowchart_url}{\code{cahracter}. URL to a webpage containing report flowchart students were supposed to follow. Also for for markers' quick reference.}

\item{quick_comment_url}{\code{cahracter}. URL to a (Google?) spreadsheet containing quick comments for convenient marking.}

\item{count_words}{\code{logical}. \code{TRUE} counts body text words and if word count exceeds \code{limit}, inserts a warning line in HTML. \code{!feedback} by default.}

\item{limit}{\code{numeric}. Word count limit}

\item{include_results}{\code{logical}. If \code{TRUE}, object provided to \code{results_obj=} will get inserted into a formatted box in knitted HTML. \code{FALSE} by default.}

\item{results_obj}{See \code{include_results}.}

\item{format_comments}{\code{logical}. If \code{TRUE} (default), comments in code chunks will be formatted in line with other marker comments.}

\item{collapse_chunks}{\code{logical}. If \code{TRUE} and  \code{feedback = TRUE}, adjacent code chunks will be collapsed into one to prevent multiple "code" buttons stacked on top of one another in rendered HTML. \code{FALSE} by default.}

\item{color}{\code{character}. Single valid colour string (hex code or any of the values in \code{colours()}).}

\item{text}{Alternative way of providing input from object rather than file. Requires \code{file_name=}}

\item{install_missing_pkgs}{\code{logical}. Should packages loaded in reports but not installed on marker's machine be installed? \code{FALSE} by default.}

\item{installed_pkgs}{\code{character}. Vector of installed packages. See Details.}

\item{rubric_grades.}{Mark for each rubric criterion. Can be a factor with levels sorted from lowest mark to highest mark. See \code{rubric} and \code{include_rubric_desc} for more info.}
}
\value{
If output .Rmd and .html files were successfully created and if \code{count_words == TRUE}, returns list of \code{$word_count} and \code{$rendered=TRUE}. If \code{count_words == FALSE}, only returns a single \code{TRUE}. Otherwise returns an error.
}
\description{
For Rmd submissions of reports and other coursework. Function checks word count and inserts space for feedback.
}
\details{
Function run with \code{feedback = FALSE} will overwrite the original Rmd file and knit it into HTML. This should be done before marking in order to automate word count. The overwritten Rmd should then be used for comments and feedback. Once done, \code{mark(feedback = TRUE)} should be run on the edited Rmd. This will output a ..._marked.html file that can be returned to students.

If \code{install_missing_pkgs == TRUE} and \code{installed_pkgs} is \code{NULL}, a vector of installed packages will be retrieved internally. This will slow things down if the function is run iteratively so it's best to provide \code{installed_pkgs}.

In-text comments can be inserted into .Rmd file on a lew line surrounded by <--/tag/ -->, where /tag/ is one of: warn, c1, c2, c3, c4, c5.
}
\examples{
# first run
mark("C:/work/201000.Rmd")
# then
mark("C:/work/201000.Rmd", feedback = T)
}
